add-highlighter global/ number-lines
add-highlighter global/ show-matching
# add-highlighter global/ show-whitespaces
add-highlighter global/ wrap

colorscheme gruvbox-dark


#### Plugins #####
# evaluate-commands "%sh{[ -d $kak_config/plugins ] || git clone https://github.com/andreyorst/plug.kak.git $kak_config/plugins/plug.kak}"
# source "%val{config}/plugins/plug.kak/rc/plug.kak"
# plug "andreyorst/smarttab.kak" defer smarttab %{
    # set-option global softtabstop 4
# } config %{
    # hook global WinSetOption filetype=(python|c|cpp|rust|markdown|kak|lisp|sh) expandtab
    # # hook global WinSetOption expandtab
# }
set-option global tabstop 4

# add C highlighting to ino files
hook global BufCreate .*\.ino %{
    set-option buffer filetype c
}

# hook global WinCreate [^*]* %{
#         editorconfig-load
# }

map global insert <tab> '<a-;><gt>'
map global insert <s-tab> '<a-;><lt>'

def ide %{
    rename-client main
    set global jumpclient main

    new rename-client tools
    set global toolsclient tools

    new rename-client docs
    set global docsclient docs
}

map global user b ':terminal kak -c %val{session}<ret>' -docstring 'split buffer into new terminal'
map global user t ':terminal $SHELL<ret>' -docstring 'open new terminal at current location'
map global user c ':comment-line<ret>' -docstring 'comment marked lines'
map global user e ':make-next-error<ret>' -docstring 'goto next make error'

# binds
map global normal <F7> :make<ret>
map global normal <F6> :format<ret>

# Python
hook global BufSetOption filetype=python %{
	set-option buffer formatcmd 'black -'
}

# JSON
hook global BufSetOption filetype=json %{
    set-option buffer formatcmd 'jq'
}
