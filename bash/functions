#!/bin/bash

# search with preview of all matches using rp and fzf
rgs() {
  searchterm=$1

  result=`rg $searchterm --files-with-matches | fzf --preview "(highlight -O ansi 2>/dev/null {} || cat {}) | rg $searchterm --context 10 --pretty --colors 'match:bg:yellow'"`

  if ! [ -z $result ]; then
    vim $result +/$searchterm
  fi
}

# tm, attach to tmux session for project
tm() {
    if [ -z "$1" ];
    then
        project=$(basename $(pwd))
    else
        project=$1
    fi

    tmux att -t "=$project" || tmux new -s "$project"
}

# doc, start dev docker for current project
doc() {
    if [ -z "$1" ];
    then
        project=$(basename $(pwd))
    else
        project=$1
    fi

    docker exec -it "$project" bash 2>/dev/null || docker start -ai "$project"
}

projcheck() {
    projdir=$HOME/Projects
    projects=$(ls $projdir)

    for project in $projects
    do
        path=$projdir/$project
        (cd $path; git status | grep clean > /dev/null) || echo "$project is dirty"
    done
}

project_root() {
    # find the root of the current project (a.k.a. git repository)

    # test if we are in a git repo
    if ! git status >/dev/null 2>&1; then
        return 128
    fi

    if [ -d .git ]; then
        pwd
    else
        (cd .. && project_root)
    fi
}

venv() {
    root=$(project_root)

    if [ $? -eq 128 ]; then
        echo "not in a git project, using current working directory"
        root=$(pwd)
    fi

    if [ ! -d $root/venv ]; then
        name=$(basename $root)
        (cd $root; python -m venv venv --prompt "$name")
    fi
    source "$root/venv/bin/activate"
}
